/*! angularjs-slider - v5.9.0 - 
 (c) Rafal Zajac <rzajac@gmail.com>, Valentin Hervieu <valentin@hervieu.me>, Jussi Saarivirta <jusasi@gmail.com>, Angelin Sirbu <angelin.sirbu@gmail.com> - 
 https://github.com/angular-slider/angularjs-slider - 
 2016-12-12 */@import url("https://fonts.googleapis.com/css?family=Josefin+Sans:400,600,700|Work+Sans:400,600");.rzslider{position:relative;display:inline-block;width:100%;height:4px;margin:35px 0 15px 0;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.rzslider.with-legend{margin-bottom:40px}.rzslider[disabled]{cursor:not-allowed}.rzslider[disabled] .rz-pointer{cursor:not-allowed;background-color:#d8e0f3}.rzslider[disabled] .rz-bar-wrapper.rz-draggable{cursor:not-allowed}.rzslider[disabled] .rz-bar.rz-selection{background:#8b91a2}.rzslider[disabled] .rz-ticks .rz-tick{cursor:not-allowed}.rzslider[disabled] .rz-ticks .rz-tick.rz-selected{background:#8b91a2}.rzslider span{position:absolute;display:inline-block;white-space:nowrap}.rzslider .rz-base{width:100%;height:100%;padding:0}.rzslider .rz-bar-wrapper{left:0;z-index:1;width:100%;height:32px;padding-top:16px;margin-top:-16px;box-sizing:border-box}.rzslider .rz-bar-wrapper.rz-draggable{cursor:move}.rzslider .rz-bar{left:0;z-index:1;width:100%;height:4px;background:#d8e0f3;border-radius:2px}.rzslider .rz-bar.rz-selection{z-index:2;background:#0db9f0;border-radius:2px}.rzslider .rz-pointer{top:-14px;z-index:3;width:32px;height:32px;cursor:pointer;background-color:#0db9f0;border-radius:16px}.rzslider .rz-pointer:after{position:absolute;top:12px;left:12px;width:8px;height:8px;background:#ffffff;border-radius:4px;content:''}.rzslider .rz-pointer:hover:after{background-color:#ffffff}.rzslider .rz-pointer.rz-active{z-index:4}.rzslider .rz-pointer.rz-active:after{background-color:#451aff}.rzslider .rz-bubble{bottom:16px;padding:1px 3px;color:#55637d;cursor:default}.rzslider .rz-bubble.rz-selection{top:16px}.rzslider .rz-bubble.rz-limit{color:#55637d}.rzslider .rz-ticks{position:absolute;top:-3px;left:0;z-index:1;width:100%;height:0;margin:0;list-style:none;box-sizing:border-box}.rzslider .rz-ticks .rz-tick{position:absolute;top:0;left:0;width:10px;height:10px;margin-left:11px;text-align:center;cursor:pointer;background:#d8e0f3;border-radius:50%}.rzslider .rz-ticks .rz-tick.rz-selected{background:#0db9f0}.rzslider .rz-ticks .rz-tick .rz-tick-value{position:absolute;top:-30px;-webkit-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}.rzslider .rz-ticks .rz-tick .rz-tick-legend{position:absolute;top:24px;max-width:50px;white-space:normal;-webkit-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}.rzslider .rz-ticks.rz-ticks-values-under .rz-tick-value{top:initial;bottom:-32px}.rzslider.rz-vertical{position:relative;width:4px;height:100%;padding:0;margin:0 20px;vertical-align:baseline}.rzslider.rz-vertical .rz-base{width:100%;height:100%;padding:0}.rzslider.rz-vertical .rz-bar-wrapper{top:auto;left:0;width:32px;height:100%;padding:0 0 0 16px;margin:0 0 0 -16px}.rzslider.rz-vertical .rz-bar{bottom:0;left:auto;width:4px;height:100%}.rzslider.rz-vertical .rz-pointer{top:auto;bottom:0;left:-14px !important}.rzslider.rz-vertical .rz-bubble{bottom:0;left:16px !important;margin-left:3px}.rzslider.rz-vertical .rz-bubble.rz-selection{top:auto;left:16px !important}.rzslider.rz-vertical .rz-ticks{top:0;left:-3px;z-index:1;width:0;height:100%}.rzslider.rz-vertical .rz-ticks .rz-tick{margin-top:11px;margin-left:auto;vertical-align:middle}.rzslider.rz-vertical .rz-ticks .rz-tick .rz-tick-value{top:initial;left:24px;-webkit-transform:translate(0, -28%);-ms-transform:translate(0, -28%);transform:translate(0, -28%)}.rzslider.rz-vertical .rz-ticks .rz-tick .rz-tick-legend{top:initial;right:24px;max-width:none;white-space:nowrap;-webkit-transform:translate(0, -28%);-ms-transform:translate(0, -28%);transform:translate(0, -28%)}.rzslider.rz-vertical .rz-ticks.rz-ticks-values-under .rz-tick-value{right:24px;bottom:initial;left:initial}@-webkit-keyframes ngdialog-fadeout{0%{opacity:1}100%{opacity:0}}@keyframes ngdialog-fadeout{0%{opacity:1}100%{opacity:0}}@-webkit-keyframes ngdialog-fadein{0%{opacity:0}100%{opacity:1}}@keyframes ngdialog-fadein{0%{opacity:0}100%{opacity:1}}.ngdialog{box-sizing:border-box}.ngdialog *,.ngdialog *:before,.ngdialog *:after{box-sizing:inherit}.ngdialog{position:fixed;overflow:auto;-webkit-overflow-scrolling:touch;z-index:10000;top:0;right:0;bottom:0;left:0}.ngdialog.ngdialog-disabled-animation,.ngdialog.ngdialog-disabled-animation .ngdialog-overlay,.ngdialog.ngdialog-disabled-animation .ngdialog-content{-webkit-animation:none !important;animation:none !important}.ngdialog-overlay{position:fixed;background:rgba(0,0,0,0.4);top:0;right:0;bottom:0;left:0;-webkit-backface-visibility:hidden;-webkit-animation:ngdialog-fadein 0.5s;animation:ngdialog-fadein 0.5s}.ngdialog-no-overlay{pointer-events:none}.ngdialog.ngdialog-closing .ngdialog-overlay{-webkit-backface-visibility:hidden;-webkit-animation:ngdialog-fadeout 0.5s;animation:ngdialog-fadeout 0.5s}.ngdialog-content{background:white;-webkit-backface-visibility:hidden;-webkit-animation:ngdialog-fadein 0.5s;animation:ngdialog-fadein 0.5s;pointer-events:all}.ngdialog.ngdialog-closing .ngdialog-content{-webkit-backface-visibility:hidden;-webkit-animation:ngdialog-fadeout 0.5s;animation:ngdialog-fadeout 0.5s}.ngdialog-close:before{font-family:'Helvetica', Arial, sans-serif;content:'\00D7';cursor:pointer}html.ngdialog-open,body.ngdialog-open{overflow:hidden}@-webkit-keyframes ngdialog-flyin{0%{opacity:0;-webkit-transform:translateY(-40px);transform:translateY(-40px)}100%{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes ngdialog-flyin{0%{opacity:0;-webkit-transform:translateY(-40px);transform:translateY(-40px)}100%{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}}@-webkit-keyframes ngdialog-flyout{0%{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}100%{opacity:0;-webkit-transform:translateY(-40px);transform:translateY(-40px)}}@keyframes ngdialog-flyout{0%{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}100%{opacity:0;-webkit-transform:translateY(-40px);transform:translateY(-40px)}}.ngdialog.ngdialog-theme-default{padding-bottom:160px;padding-top:160px}.ngdialog.ngdialog-theme-default.ngdialog-closing .ngdialog-content{-webkit-animation:ngdialog-flyout .5s;animation:ngdialog-flyout .5s}.ngdialog.ngdialog-theme-default .ngdialog-content{-webkit-animation:ngdialog-flyin .5s;animation:ngdialog-flyin .5s;background:#f0f0f0;border-radius:5px;color:#444;font-family:'Helvetica',sans-serif;font-size:1.1em;line-height:1.5em;margin:0 auto;max-width:100%;padding:1em;position:relative;width:450px}.ngdialog.ngdialog-theme-default .ngdialog-close{border-radius:5px;cursor:pointer;position:absolute;right:0;top:0}.ngdialog.ngdialog-theme-default .ngdialog-close:before{background:transparent;border-radius:3px;color:#bbb;content:'\00D7';font-size:26px;font-weight:400;height:30px;line-height:26px;position:absolute;right:3px;text-align:center;top:3px;width:30px}.ngdialog.ngdialog-theme-default .ngdialog-close:hover:before,.ngdialog.ngdialog-theme-default .ngdialog-close:active:before{color:#777}.ngdialog.ngdialog-theme-default .ngdialog-message{margin-bottom:.5em}.ngdialog.ngdialog-theme-default .ngdialog-input{margin-bottom:1em}.ngdialog.ngdialog-theme-default .ngdialog-input textarea,.ngdialog.ngdialog-theme-default .ngdialog-input input[type="text"],.ngdialog.ngdialog-theme-default .ngdialog-input input[type="password"],.ngdialog.ngdialog-theme-default .ngdialog-input input[type="email"],.ngdialog.ngdialog-theme-default .ngdialog-input input[type="url"]{background:#fff;border:0;border-radius:3px;font-family:inherit;font-size:inherit;font-weight:inherit;margin:0 0 .25em;min-height:2.5em;padding:.25em .67em;width:100%}.ngdialog.ngdialog-theme-default .ngdialog-input textarea:focus,.ngdialog.ngdialog-theme-default .ngdialog-input input[type="text"]:focus,.ngdialog.ngdialog-theme-default .ngdialog-input input[type="password"]:focus,.ngdialog.ngdialog-theme-default .ngdialog-input input[type="email"]:focus,.ngdialog.ngdialog-theme-default .ngdialog-input input[type="url"]:focus{box-shadow:inset 0 0 0 2px #8dbdf1;outline:none}.ngdialog.ngdialog-theme-default .ngdialog-buttons{*zoom:1}.ngdialog.ngdialog-theme-default .ngdialog-buttons:after{content:'';display:table;clear:both}.ngdialog.ngdialog-theme-default .ngdialog-button{border:0;border-radius:3px;cursor:pointer;float:right;font-family:inherit;font-size:.8em;letter-spacing:.1em;line-height:1em;margin:0 0 0 .5em;padding:.75em 2em;text-transform:uppercase}.ngdialog.ngdialog-theme-default .ngdialog-button:focus{-webkit-animation:ngdialog-pulse 1.1s infinite;animation:ngdialog-pulse 1.1s infinite;outline:none}@media (max-width: 568px){.ngdialog.ngdialog-theme-default .ngdialog-button:focus{-webkit-animation:none;animation:none}}.ngdialog.ngdialog-theme-default .ngdialog-button.ngdialog-button-primary{background:#3288e6;color:#fff}.ngdialog.ngdialog-theme-default .ngdialog-button.ngdialog-button-secondary{background:#e0e0e0;color:#777}*,*:before,*:after{box-sizing:border-box}*{margin:0;padding:0}html,body{height:100%}html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1.5}.btn{display:inline-block;padding:9px 20px 5px;background:#FFCA00;border-radius:100px;border:2px solid #FFCA00;color:#fff;margin-top:10px;margin-bottom:10px;text-align:center;font-size:14px;cursor:pointer;text-transform:uppercase;text-decoration:none;font-family:"Josefin Sans",sans-serif;font-weight:700;margin-bottom:50px;transition:border .5s ease}.btn:hover{background:#FFBF00;border:2px solid #FFEAA8;color:#fff}.btn--ghost{background:transparent;border:1px solid #FFBF00;color:#FFBF00}.btn--ghost:hover{background:#FFBF00;color:#fff}.btn--disabled{background:#DBDFE4;border:2px solid #DBDFE4}.btn--alternative{background:#fff;color:#4C0985;border:2px solid #fff}.btn--alternative:hover{border:2px solid #FFCA00}@media (max-width: 40em){.btn-wrapper{text-align:center}}body{color:#4A4A4A;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}h1,h2,h3,h4,p,blockquote,li,a,span,label{font-family:sans-serif}h1{line-height:1.2;margin-bottom:5px;font-family:"Josefin Sans",sans-serif;font-weight:700;color:#FFCA00;font-size:27px;font-size:calc(2.40741vw + 21.2963px)}@media (max-width: 320px){h1{font-size:29px}}@media (min-width: 1400px){h1{font-size:55px}}h2{font-size:24px;font-size:calc(1.94444vw + 17.77778px);line-height:1.3;margin-bottom:34px;font-family:"Josefin Sans",sans-serif;color:#FFCA00;font-weight:700}@media (max-width: 320px){h2{font-size:24px}}@media (min-width: 1400px){h2{font-size:45px}}h3{font-size:16px;line-height:1.3;margin-bottom:15px;font-family:"Josefin Sans",sans-serif;font-weight:400}@media (min-width: 40.0625em){h3{font-size:36px}}h4{font-size:16px;line-height:1.3;margin-bottom:15px;color:#697277}@media (min-width: 40.0625em){h4{font-size:22px}}p,label,li{font-size:14px;margin-bottom:5px;line-height:1.8;color:#4A4A4A;font-family:"Work Sans",sans-serif}@media (min-width: 40.0625em){p,label,li{font-size:16px}}@media (min-width: 60.0625em){p,label,li{font-size:18px}}ul{padding-left:25px}strong{font-weight:bold;color:#51585c}.top-menu a{font-family:"Josefin Sans",sans-serif;color:#fff;font-size:16px}@media (min-width: 40.0625em){.top-menu a{color:#fff}.top-menu a:hover{color:#00B9F7}}.top-menu a:current{color:#00B9F7}blockquote,blockquote p{font-size:15px;color:#000;line-height:1.3}@media (min-width: 40.0625em){blockquote,blockquote p{font-size:30px}}@media (min-width: 20.0625em) and (max-width: 60em){blockquote,blockquote p{font-size:24px}}::-webkit-input-placeholder{font-family:"Josefin Sans",sans-serif;font-size:12px}@media (min-width: 40.0625em){::-webkit-input-placeholder{font-size:16px}}:-moz-placeholder{font-family:"Josefin Sans",sans-serif;font-size:12px;color:#727378}@media (min-width: 40.0625em){:-moz-placeholder{font-size:16px}}::-moz-placeholder{font-family:"Josefin Sans",sans-serif;font-size:12px;color:#727378}@media (min-width: 40.0625em){::-moz-placeholder{font-size:16px}}:-ms-input-placeholder{font-family:"Josefin Sans",sans-serif;font-size:12px;color:#727378}@media (min-width: 40.0625em){:-ms-input-placeholder{font-size:16px}}.slide-view.ng-enter,.slide-view.ng-leave{position:absolute;left:30px;right:30px;transition:0.5s all ease;-moz-transition:0.5s all ease;-webkit-transition:0.5s all ease}.slide-view.ng-enter{-webkit-animation:slideInRight 0.5s both ease;animation:slideInRight 0.5s both ease}.slide-view.ng-leave{-webkit-animation:slideOutLeft 0.5s both ease;animation:slideOutLeft 0.5s both ease}@keyframes slideOutLeft{to{-webkit-transform:translateX(-200%);transform:translateX(-200%)}}@-webkit-keyframes slideOutLeft{to{-webkit-transform:translateX(-200%)}}@keyframes slideInRight{from{-webkit-transform:translateX(200%);transform:translateX(200%)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@-webkit-keyframes slideInRight{from{-webkit-transform:translateX(200%)}to{-webkit-transform:translateX(0)}}body{border-top:3px solid #FFCA00}@media (max-width: 40em){#container{padding-bottom:20px}}.content-wrapper{float:left;width:93.75%;margin-right:3.125%;margin-left:3.125%;overflow:hidden}@media (min-width: 60.0625em){.content-wrapper{width:98.4375%;margin-right:.78125%;margin-left:.78125%}}@media (min-width: 40.0625em) and (max-width: 60em){.content-wrapper{width:97.91667%;margin-right:1.04167%;margin-left:1.04167%}}@media (min-width: 20.0625em) and (max-width: 40em){.content-wrapper{width:96.875%;margin-right:1.5625%;margin-left:1.5625%}}.wrapper{zoom:1;float:none;margin-right:auto;margin-left:auto;padding-left:30px;padding-right:30px;zoom:1;float:none;max-width:80em;margin-right:auto;margin-left:auto}.wrapper:before,.wrapper:after{content:"\0020";display:block;height:0;overflow:hidden}.wrapper:after{clear:both}@media (min-width: 40.0625em){.wrapper{padding-left:60px;padding-right:60px}}.accentColor{color:#FFCA00}.border__right--0{border-right:0 !important}.border__left--0{border-left:0 !important}.no-wrap{white-space:nowrap}.svg-fix{position:relative;display:inline-block}.svg-fix:after{content:"";position:absolute;top:0;right:0;bottom:0;left:0}ul{padding-left:0}img{max-width:100%}.main-centered-text{max-width:940px;margin-right:auto;margin-left:auto;float:none;clear:both}.center{text-align:center}.center--mobile{margin-left:auto;margin-right:auto;display:block}.mrg-side-auto{margin-left:auto;margin-right:auto}.mrg-0{margin:0 !important}.right{float:right}@media (min-width: 40.0625em){.right--desktop{float:right}}.arrow{position:relative}.arrow--gray{background:#EAEAEA;position:relative}.arrow--gray:after{right:100%;top:50%;border:solid transparent;content:" ";height:0;width:0;position:absolute;pointer-events:none;border-color:rgba(234,234,234,0);border-right-color:#EAEAEA;border-width:37px;margin-top:-37px}header a,footer a{text-decoration:none}.hidden-desktop{display:none !important}@media (max-width: 40em){.hidden-desktop{display:block !important}}.hidden-mobile{display:block !important}@media (max-width: 40em){.hidden-mobile{display:none !important}}.wrap-dd-select{position:relative;cursor:pointer;outline:none}.wrap-dd-select.disabled{cursor:default;color:#5B6A7D}.wrap-dd-select.disabled:after{border:none}.wrap-dd-select .dropdown{position:absolute;top:101%;left:0;right:0;z-index:10;background:white;padding:0;background:#FFFAE9;list-style:none;visibility:hidden;max-height:300px;overflow-y:auto}.wrap-dd-select .dropdown li.divider{padding:2px 0;background:#e6e8ea}.wrap-dd-select .dropdown li.divider-label{background:#e6e8ea;cursor:default;color:#000;padding:10px 0}.wrap-dd-select .dropdown li:first-of-type{display:none}.wrap-dd-select .dropdown li a{display:block;padding:10px 15px 7px 15px;text-decoration:none;cursor:pointer;border-left:3px solid #FFFAE8;font-family:"Josefin Sans",sans-serif;font-weight:700;color:#727272}.wrap-dd-select .dropdown li i{float:right;color:inherit}.wrap-dd-select .dropdown li:last-of-type a{border-radius:0 0 7px 7px;border:none}.wrap-dd-select .dropdown li:hover a{background:#FEF2C7;border-left:3px solid #FFBF00;color:#E1A800}.wrap-dd-select .dropdown:after{content:"";width:0;height:0;position:absolute;bottom:100%;right:15px;border-width:0 6px 6px 6px;border-style:solid;border-color:#fff transparent}.wrap-dd-select .dropdown:before{content:"";width:0;height:0;position:absolute;bottom:100%;right:13px;border-width:0 8px 8px 8px;border-style:solid;border-color:rgba(0,0,0,0.1) transparent}.wrap-dd-select.active .dropdown{visibility:visible}.wrap-dd-menu{position:relative;width:200px;margin:0 auto;padding:10px}.wrap-dd-menu.disabled{cursor:default;color:#5B6A7D}.wrap-dd-menu .dropdown{position:absolute;z-index:1;top:70%;left:0;right:0;background:white;padding:0;border-radius:7px;border:1px solid rgba(0,0,0,0.17);box-shadow:0 0 5px rgba(0,0,0,0.1);font-weight:normal;list-style:none;visibility:hidden}.wrap-dd-menu .dropdown li.divider{padding:2px 0;background:#e6e8ea}.wrap-dd-menu .dropdown li.divider-label{background:#e6e8ea;cursor:default;color:#000;padding:10px 0}.wrap-dd-menu .dropdown li a{display:block;padding:10px;text-decoration:none;color:#8aa8bd;border-bottom:1px solid #e6e8ea;box-shadow:inset 0 1px 0 #fff;cursor:pointer}.wrap-dd-menu .dropdown li i{float:right;color:inherit}.wrap-dd-menu .dropdown li:first-of-type a{border-radius:7px 7px 0 0}.wrap-dd-menu .dropdown li:last-of-type a{border-radius:0 0 7px 7px;border:none}.wrap-dd-menu .dropdown li:hover a{background:#f3f8f8}.wrap-dd-menu .dropdown:after{content:"";width:0;height:0;position:absolute;bottom:100%;right:102px;border-width:0 6px 6px 6px;border-style:solid;border-color:#fff transparent}.wrap-dd-menu .dropdown:before{content:"";width:0;height:0;position:absolute;bottom:100%;right:100px;border-width:0 8px 8px 8px;border-style:solid;border-color:rgba(0,0,0,0.1) transparent}.wrap-dd-menu .dropdown.active{visibility:visible}.input--info,.wrap-dd-select{background:#FAFAFA;border:1px solid #EEEEEE;padding:17px 25px;border-radius:3px;-webkit-appearance:none;-moz-appearance:none;appearance:none;color:#4A4A4A;font-size:16px;font-family:"Josefin Sans",sans-serif;font-weight:700}.input--info:focus,.wrap-dd-select:focus{outline:0;border-bottom:1px solid #FFCA00}input[type="text"]:focus{outline:0;border-bottom:1px solid #FFCA00}.wrap-dd-select{background-image:url(../img/icons/arrow.png);background-image:url(../img/icons/arrow.svg);background-repeat:no-repeat;background-position:97%;padding:12px 25px}.wrap-dd-select.active{background-image:url(../img/icons/arrow-active.png);background-image:url(../img/icons/arrow-active.svg);color:#E1A800;background-color:#FFEAA8;border:1px solid #FFBF00}span.input-square{float:left;background:#ffca00;height:50px;width:12%;width:40px;cursor:pointer;background-repeat:no-repeat;background-position:center}span.input-square--left{border-radius:3px 0 0 3px;background-image:url(../img/icons/icon-minus.svg)}span.input-square--right{background-image:url(../img/icons/icon-plus.svg);border-radius:0 3px 3px 0}.question__number-input{height:50px;border:1px solid #FFEAA8;background:#FFFCF4;color:#4A4A4A;font-family:"Josefin Sans",sans-serif;font-weight:700;font-size:24px;text-align:center;max-width:120px;-webkit-appearance:none}.rzslider{width:75%;width:calc(100% - 80px);float:left;margin:24px 0 15px 0}.rzslider .rz-pointer{background:#FFDA7C}.rzslider .rz-pointer:after,.rzslider .rz-pointer:hover:after,.rzslider .rz-pointer.rz-active:after{background:#FFBF00;top:8px;left:8px;width:16px;height:16px;border-radius:14px}.rzslider .rz-pointer:focus{outline:0}.rzslider .rz-bar-wrapper{padding-top:24px;margin-top:-24px;border:1px solid #FFBF00;background:#FFFCF4;padding-bottom:24px}.rzslider .rz-bar{height:2px;background:#FFBF00}.rzslider .rz-bubble{bottom:-70px;left:50% !important;margin-left:-16px}.rzslider .rz-bubble::after{content:"%";padding-left:5px}.rzslider .rz-ticks .rz-tick{width:2px;background:#FFBF00;margin-left:12}.rzslider .rz-tick:first-of-type:after{content:"";width:12px;display:block;height:48px;background:#fffcf4;left:-12px;position:absolute;top:-20px}.rzslider .rz-tick:last-of-type:after{content:"";width:18px;display:block;height:48px;background:#fffcf4;left:2px;position:absolute;top:-20px}.question__radio{position:relative;float:left;width:100%;max-width:100px;padding-bottom:3px}.question__radio input[type=radio]{position:absolute;visibility:hidden}.question__radio label{position:relative;padding-left:30px;z-index:9;cursor:pointer;-webkit-transition:all 0.25s linear;color:#9B9B9B}.question__radio .check{display:block;position:absolute;border:3px solid #BABABA;border-radius:100%;height:20px;width:20px;top:6px;z-index:5;transition:border .25s linear;-webkit-transition:border .25s linear}.question__radio .check::before{display:block;position:absolute;content:'';border-radius:100%;height:12px;width:12px;top:1px;left:1px;margin:auto;transition:background 0.25s linear;-webkit-transition:background 0.25s linear}input[type=radio]:checked ~ .check{border:3px solid #FFCA00}input[type=radio]:checked ~ .check::before{background:#FFCA00}input[type=radio]:checked ~ label{color:#222222}.question__text{font-family:"Work Sans",sans-serif;color:#4A4A4A;font-size:16px;font-size:calc(.37037vw + 12.81481px);margin-bottom:60px}@media (max-width: 320px){.question__text{font-size:14px}}@media (min-width: 1400px){.question__text{font-size:18px}}.section2QuestionSlide .question__text{margin-bottom:30px}.question__option{font-family:"Josefin Sans",sans-serif;font-weight:700;color:#000;font-size:16px;font-size:calc(.18519vw + 15.40741px);margin-bottom:25px}@media (max-width: 320px){.question__option{font-size:16px}}@media (min-width: 1400px){.question__option{font-size:18px}}.question__option-wrapper{display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap}@media (min-width: 20.0625em){.question__option-wrapper{margin-bottom:70px}}.question__input{display:-webkit-flex;display:-ms-flexbox;display:flex;margin-top:auto}.question__option-item{width:100%;margin-bottom:75px}@media (min-width: 40.0625em){.question__option-item{display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;width:47%}}.question__single-container{overflow:hidden;margin-bottom:75px}.question__single-container:last-of-type{margin-bottom:0}.numeric_single_option{width:100%}@media (min-width: 40.0625em){.numeric_single_option{width:47%;float:left;margin-right:5%}}.numeric_single_option+.numeric_single_option{margin-right:0}.numeric_multiple_option{width:100%;clear:both}.results__yours{background:#FFFCF4}.results__number{position:absolute;margin-left:auto;margin-right:auto;left:0;right:0;color:#fff;font-family:"Josefin Sans",sans-serif;font-weight:600;font-size:20px;font-size:calc(.55556vw + 12.22222px)}@media (max-width: 320px){.results__number{font-size:14px}}@media (min-width: 1400px){.results__number{font-size:20px}}@media (max-width: 29.9375em){.results__number{top:33%}}.results__promedio{font-size:29px;font-size:calc(1.01852vw + 25.74074px)}@media (max-width: 320px){.results__promedio{font-size:29px}}@media (min-width: 1400px){.results__promedio{font-size:40px}}@media (min-width: 47.5625em){.results__promedio{margin-right:15px}}.results__text{font-family:"Work Sans",sans-serif;font-size:16px;font-size:calc(.27778vw + 12.11111px)}@media (max-width: 320px){.results__text{font-size:13px}}@media (min-width: 1400px){.results__text{font-size:16px}}@media (min-width: 47.5625em){.results__text{max-width:95px;text-align:left}}.results__graphic{margin-left:auto;margin-right:auto;max-width:250px;min-width:38px}.Rtable{display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;margin:3em 0 6em 0;padding:0}.Rtable__cell{text-align:center;box-sizing:border-box;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;width:100%;padding:.4em .5em;overflow:hidden;list-style:none;border:solid 1px #FFBF00;border-top:0;border-left:0;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-ms-flex-align:center;align-items:center;position:relative;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;font-family:"Josefin Sans",sans-serif;font-weight:700;color:rgba(0,0,0,0.7);font-size:18px;font-size:calc(.37037vw + 12.81481px);-webkit-flex-align:center}@media (max-width: 320px){.Rtable__cell{font-size:14px}}@media (min-width: 1400px){.Rtable__cell{font-size:18px}}@media (min-width: 20.0625em){.Rtable__cell{padding:0.8em 1.2em}}.Rtable__cell:last-of-type{border-right:0}.Rtable__cell--per-promedio{-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap}@media (min-width: 47.5625em){.Rtable__cell--per-promedio{min-height:135px}}.Rtable__heading{min-height:auto}.Rtable__results{display:-webkit-flex;display:-ms-flexbox;display:flex;width:100%}.Rtable--2cols .Rtable-cell{width:50%}.Rtable--3cols .Rtable__cell{width:33.33%}.Rtable--4cols .Rtable__cell{width:25%}.Rtable--5cols .Rtable-cell{width:20%}.Rtable--6cols .Rtable-cell{width:16.6%}.ngdialog-content{text-align:center;border-radius:20px !important;max-width:780px !important}@media (min-width: 40.0625em){.ngdialog-content{padding:3em !important}}.ngdialog.ngdialog-theme-default .ngdialog-close:before{color:#4C0985}.dialog__heading{font-size:20px;font-size:calc(.55556vw + 16.22222px);margin-bottom:15px}@media (max-width: 320px){.dialog__heading{font-size:18px}}@media (min-width: 1400px){.dialog__heading{font-size:24px}}.dialog__text{font-size:14px;margin-bottom:50px}.comparativo{margin-top:75px}.comparativo__buttons{float:left;width:93.75%;margin-right:3.125%;margin-left:3.125%}@media (min-width: 60.0625em){.comparativo__buttons{width:35.9375%;margin-right:.78125%;margin-left:.78125%}}@media (min-width: 40.0625em) and (max-width: 60em){.comparativo__buttons{width:97.91667%;margin-right:1.04167%;margin-left:1.04167%}}@media (min-width: 20.0625em) and (max-width: 40em){.comparativo__buttons{width:96.875%;margin-right:1.5625%;margin-left:1.5625%}}.comparativo__map{float:left;width:93.75%;margin-right:3.125%;margin-left:3.125%}@media (min-width: 60.0625em){.comparativo__map{width:60.9375%;margin-right:.78125%;margin-left:.78125%}}@media (min-width: 40.0625em) and (max-width: 60em){.comparativo__map{width:97.91667%;margin-right:1.04167%;margin-left:1.04167%}}@media (min-width: 20.0625em) and (max-width: 40em){.comparativo__map{width:96.875%;margin-right:1.5625%;margin-left:1.5625%}}.comparativo__btn{box-shadow:0 0 2px 0 rgba(0,0,0,0.4);font-family:"Work Sans",sans-serif;font-size:16px;padding:16px 12px;cursor:pointer;margin-bottom:15px;border-right:5px solid #fff;position:relative}.comparativo__btn:after{content:"\f058";font-family:FontAwesome;right:5px;position:absolute;top:4px;opacity:0}@media (min-width: 40.0625em) and (max-width: 60em){.comparativo__btn{float:left;margin-right:2%;width:48%}}.comparativo__btn:nth-of-type(1).selected{box-shadow:0 1px 4px #FFCA00;border-right:5px solid #FFCA00}.comparativo__btn:nth-of-type(1).selected:after{opacity:1;color:#FFCA00}.comparativo__btn:nth-of-type(2).selected{box-shadow:0 1px 4px #4C0985;border-right:5px solid #4C0985}.comparativo__btn:nth-of-type(2).selected:after{opacity:1;color:#4C0985}.comparativo__btn:nth-of-type(3).selected{box-shadow:0 1px 4px #50E3C2;border-right:5px solid #50E3C2}.comparativo__btn:nth-of-type(3).selected:after{opacity:1;color:#50E3C2}.comparativo__btn:nth-of-type(4).selected{box-shadow:0 1px 4px #00C2FF;border-right:5px solid #00C2FF}.comparativo__btn:nth-of-type(4).selected:after{opacity:1;color:#00C2FF}.comparativo__heading{color:#5D5D5D;font-family:"Josefin Sans",sans-serif;font-weight:700;font-size:16px;margin-bottom:5px}.comparativo__text{color:#5D5D5D;font-family:"Work Sans",sans-serif;font-size:14px;line-height:1.4}.comparativo__comuna{font-size:12px;margin-bottom:0;margin-top:2px;color:#fff}.comparativo__circle{width:50px;height:50px;border-radius:100%;float:left;margin-right:15px}.comparativo__circle--primary{background:#FFCA00}.comparativo__circle--secondary{background:#4C0985}.comparativo__circle--tertiary{background:#50E3C2}.comparativo__circle--fourth{background:#00C2FF}html,body{width:100%}#comparisonMap svg{max-width:100% !important;height:auto;display:block}.department{cursor:pointer}.enabled{fill:#21669E;cursor:pointer}.enabled:hover{fill:#CC2929;transition:0.3s}.description{position:absolute;font-size:18px;text-align:center;background:rgba(0,0,0,0.27);padding:12px 15px 5px;z-index:5;margin:0 auto;color:#fff;font-family:"Josefin Sans",sans-serif;font-weight:600;border-radius:5px;-ms-transform:translateX(-50%);-webkit-transform:translateX(-50%);transform:translateX(-50%);display:none}.description__close{position:absolute;right:4px;top:4px;font-size:12px;cursor:pointer;color:#fff}.description.active{display:block}.description:after{content:"";position:absolute;left:50%;top:100%;width:0;height:0;margin-left:-10px;border-left:10px solid transparent;border-right:10px solid transparent;border-top:10px solid rgba(0,0,0,0.27)}.pieChart{line-height:0}.easypielabel{position:relative;z-index:auto;top:36px}.header{padding-top:20px;margin-bottom:55px}@media (min-width: 40.0625em){.header{margin-bottom:100px}}.welcomeSlide .header,.classCodeSlide .header{margin-bottom:0}.header__container{display:-webkit-flex;display:-ms-flexbox;display:flex;height:41px;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-align-items:center;-ms-flex-align:center;align-items:center}.header__item--1{margin-right:auto;font-family:"Josefin Sans",sans-serif;font-weight:700;font-size:16px;color:#000;text-transform:uppercase}.header__item--2{margin:auto;text-align:center;max-width:200px;width:100%;display:block}@media (max-width: 40em){.header__item--2{margin-top:40px}}.header__item--3{margin-left:auto}.header__acerca{font-family:"Josefin Sans",sans-serif;font-weight:700;color:#D0D6DF;font-size:14px;text-transform:uppercase;outline:0}.header__code{font-family:"Josefin Sans",sans-serif;font-weight:700;font-size:16px;color:#4C0985}.header__section{font-family:"Work Sans",sans-serif;font-weight:600;color:#4A4A4A;font-size:14px}.header__progress-container{max-width:300px;background:#EDE6F3;max-height:5px;border-radius:200px;margin-top:6px;margin-bottom:7px}.header__progress-bar{height:4px;background-image:linear-gradient(134deg, #3023AE 0%, #B966D4 90%, #C96DD8 100%);border-radius:200px}.classCodeSlide .header__item--1{color:#fff}.footer{background-color:#333938;padding-top:80px;padding-bottom:70px;color:#6F7E7D}@media (max-width: 40em){.footer{text-align:center}}.footer__column--1{float:left;width:93.75%;margin-right:3.125%;margin-left:3.125%;margin-bottom:25px}@media (min-width: 60.0625em){.footer__column--1{width:32.8125%;margin-right:.78125%;margin-left:.78125%}}@media (min-width: 40.0625em) and (max-width: 60em){.footer__column--1{width:31.25%;margin-right:1.04167%;margin-left:1.04167%}}@media (min-width: 20.0625em) and (max-width: 40em){.footer__column--1{width:96.875%;margin-right:1.5625%;margin-left:1.5625%}}.footer__column--2{float:left;width:93.75%;margin-right:3.125%;margin-left:3.125%;margin-bottom:25px}@media (min-width: 60.0625em){.footer__column--2{width:20.3125%;margin-right:.78125%;margin-left:.78125%}}@media (min-width: 40.0625em) and (max-width: 60em){.footer__column--2{width:27.08333%;margin-right:1.04167%;margin-left:1.04167%}}@media (min-width: 20.0625em) and (max-width: 40em){.footer__column--2{width:96.875%;margin-right:1.5625%;margin-left:1.5625%}}.footer__column--2 ul{list-style:none}.footer__column--3{float:left;width:93.75%;margin-right:3.125%;margin-left:3.125%;margin-bottom:25px}@media (min-width: 60.0625em){.footer__column--3{width:42.1875%;margin-right:.78125%;margin-left:.78125%}}@media (min-width: 40.0625em) and (max-width: 60em){.footer__column--3{width:35.41667%;margin-right:1.04167%;margin-left:1.04167%}}@media (min-width: 20.0625em) and (max-width: 40em){.footer__column--3{width:96.875%;margin-right:1.5625%;margin-left:1.5625%}}.footer__top{margin-bottom:15px !important}.footer__social{display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between}.footer__copy{font-size:calc(.55556vw + 14.22222px);margin-top:20px;font-family:"Work Sans",sans-serif;color:#6F7E7D}@media (max-width: 320px){.footer__copy{font-size:16px}}@media (min-width: 1400px){.footer__copy{font-size:22px}}.footer__link{color:#6F7E7D;font-size:16px;font-size:calc(.37037vw + 14.81481px);font-family:"Work Sans",sans-serif;line-height:1.3}@media (max-width: 320px){.footer__link{font-size:16px}}@media (min-width: 1400px){.footer__link{font-size:20px}}.footer__link:hover{color:#FFCA00}.footer__text{color:#6F7E7D;font-size:16px;font-size:calc(.37037vw + 14.81481px);margin-bottom:10px;line-height:1.3}@media (max-width: 320px){.footer__text{font-size:16px}}@media (min-width: 1400px){.footer__text{font-size:20px}}.footer li{margin-bottom:0}.footer__icons{vertical-align:top;font-size:25px !important;margin-right:25px;color:#fff;line-height:1}.welcome-slide__img{padding-top:35px;max-width:190px}@media (min-width: 20.0625em){.welcome-slide__img{max-width:250px}}@media (min-width: 87.5625em){.welcome-slide__img{margin-top:75px;margin-top:calc(4.62963vw + 30.18519px);max-width:100%}}@media (min-width: 87.5625em) and (max-width: 320px){.welcome-slide__img{margin-top:45px}}@media (min-width: 87.5625em) and (min-width: 1400px){.welcome-slide__img{margin-top:95px}}.welcome-slide__subheading{color:#4C0985;font-size:18px;font-size:calc(.64815vw + 11.92593px);font-family:"Josefin Sans",sans-serif;font-weight:700;text-transform:uppercase;margin-bottom:18px}@media (max-width: 320px){.welcome-slide__subheading{font-size:14px}}@media (min-width: 1400px){.welcome-slide__subheading{font-size:21px}}.welcome-slide__text{margin-bottom:30px}.classCodeSlide{background-color:#4C0985;background-image:url(../img/backgrounds/nodos.png);background-image:url(../img/backgrounds/nodos.svg);background-repeat:no-repeat;background-position:bottom;height:100vh}@media (min-width: 40.0625em){.classCodeSlide{background-size:contain}}.code-slide__text{color:#FFCA00;font-size:22px;font-size:calc(1.38889vw + 14.55556px);padding-top:25vh;margin-bottom:25px}@media (max-width: 320px){.code-slide__text{font-size:19px}}@media (min-width: 1400px){.code-slide__text{font-size:34px}}input.code-slide__input{font-size:30px;background:transparent;border:0;border-bottom:3px solid #fff;width:auto;display:inline-block;text-align:center;color:#fff;max-width:211px;max-width:calc(2.87037vw + 170.81481px);margin-bottom:100px;font-size:30px;font-size:calc(2.5vw + 20px);padding-bottom:10px;border-radius:0}@media (max-width: 320px){input.code-slide__input{max-width:180px}}@media (min-width: 1400px){input.code-slide__input{max-width:211px}}@media (max-width: 320px){input.code-slide__input{font-size:28px}}@media (min-width: 1400px){input.code-slide__input{font-size:55px}}input.code-slide__input:focus{border-bottom:3px solid #fff}input.code-slide__input::-webkit-input-placeholder{font-size:20px;font-size:calc(2.77778vw + 16.11111px)}@media (max-width: 320px){input.code-slide__input::-webkit-input-placeholder{font-size:25px}}@media (min-width: 1400px){input.code-slide__input::-webkit-input-placeholder{font-size:55px}}input.code-slide__input:-moz-placeholder{font-size:20px;font-size:calc(2.77778vw + 16.11111px)}@media (max-width: 320px){input.code-slide__input:-moz-placeholder{font-size:25px}}@media (min-width: 1400px){input.code-slide__input:-moz-placeholder{font-size:55px}}input.code-slide__input::-moz-placeholder{font-size:20px;font-size:calc(2.77778vw + 16.11111px)}@media (max-width: 320px){input.code-slide__input::-moz-placeholder{font-size:25px}}@media (min-width: 1400px){input.code-slide__input::-moz-placeholder{font-size:55px}}input.code-slide__input:-ms-input-placeholder{font-size:20px;font-size:calc(2.77778vw + 16.11111px)}@media (max-width: 320px){input.code-slide__input:-ms-input-placeholder{font-size:25px}}@media (min-width: 1400px){input.code-slide__input:-ms-input-placeholder{font-size:55px}}.student-info__inputs{display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between}.student-info__left{width:100%;margin-bottom:30px}@media (min-width: 40.0625em){.student-info__left{width:60%}}.student-info__right{width:100%;margin-bottom:30px}@media (min-width: 40.0625em){.student-info__right{width:38%}}.student-info__maps{max-width:400px;width:100%;margin:20px auto;display:block}.studentDataSlide .header{margin-bottom:100px}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
